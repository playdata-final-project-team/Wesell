pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/deploy']],
                    extensions: [[$class: 'PathRestriction', excludedRegions: '', includedRegions: 'config-server/.*']],
                    userRemoteConfigs: [[url: 'https://github.com/playdata-final-project-team/Wesell.git']]
                ])
            }
        }
        stage('Gradle Build') {
            steps {
                dir("config-server") {
                    sh 'chmod +x gradlew'
                    sh './gradlew clean build -x test'
                }
            }
        }
        stage('Build and push Docker image') {
            steps {
                script {
                    dir("config-server") {
                        // Docker Hub Credentials 설정
                        withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                            // Docker Build 및 Push
                            sh "docker build -t lbs991218/wesell:config-server ."
                            sh "docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD"
                            sh "docker push lbs991218/wesell:config-server"
                        }
                    }
                }
            }
        }
        stage('Deploy to EC2') {
            steps {
                script {
                    // EC2에 접속하여 Docker 컨테이너 관리
                    sh """
                            sudo -u ubuntu ssh -o StrictHostKeyChecking=no ubuntu@ec2-18-118-152-48.us-east-2.compute.amazonaws.com '
                            sudo docker stop \$(sudo docker ps -q) || true
                            sudo docker rm \$(sudo docker ps -a -q) || true
                            sudo docker rmi \$(sudo docker images -q) || true
                            sudo docker pull lbs991218/wesell:config-server
                            sudo docker run -d -p 8088:8088 lbs991218/wesell:config-server
                        '
                    """
                }
            }
        }
    }
}
